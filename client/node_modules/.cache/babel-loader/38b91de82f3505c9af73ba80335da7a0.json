{"ast":null,"code":"var _jsxFileName = \"/home/akash/Dev/TwitterClone/client/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\"; // import { Navigate } from \"react-router-dom\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport { ApiContext } from \"./ApiContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //  localStorage.getItem('authToken')?jwt_decode((JSON.parse(localStorage.getItem('authToken'))).access):null\n  let [authToken, SetauthTokens] = useState(localStorage.getItem('authToken') ? JSON.parse(localStorage.getItem('authToken')) : null); // const navigate = useNavigate();\n\n  let [user, Setuser] = useState(localStorage.getItem('authToken') ? jwt_decode(JSON.parse(localStorage.getItem('authToken')).access) : null);\n  let [loading, Setloading] = useState(true);\n  let [tweetDetail, SettweetDetail] = useState(null);\n\n  let userLogin = async e => {\n    e.preventDefault();\n    console.log(e);\n    let username = e.target.username.value;\n    let password = e.target.password.value;\n    let data = {\n      username,\n      password\n    }; // console.log(data);\n\n    console.log(\"form submmitted\");\n    const response = await axios.post(`http://127.0.0.1:8000/token/`, data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (response.status === 200) {\n      let data1 = await response.data;\n      await SetauthTokens(data1);\n      await Setuser(jwt_decode(data1.access));\n      localStorage.setItem('authToken', JSON.stringify(data1)); // return <Navigate to='/' />\n    } else {\n      alert('Something went Wrong! :('); // return <Navigate to='/signin' />\n    }\n  };\n\n  let logout = () => {\n    SetauthTokens(null);\n    Setuser(null);\n    localStorage.removeItem('authToken'); // navigate(\"/\");\n  };\n\n  let updateToken = async () => {\n    console.log(\"Update Token\");\n    const response = await axios.post(`http://127.0.0.1:8000/token/refresh/`, {\n      'refresh': authToken.refresh\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (response.status === 200) {\n      let data1 = await response.data;\n      await SetauthTokens(data1);\n      await Setuser(jwt_decode(data1.access));\n      localStorage.setItem('authToken', JSON.stringify(data1));\n    } else {\n      logout();\n    }\n  };\n\n  const Detail_tweet = async id => {\n    try {\n      const Response = await axios.get(`http://127.0.0.1:8000/detail/${id}/`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + String(authToken.access)\n        }\n      });\n      SettweetDetail(Response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  let contextData = {\n    authToken: authToken,\n    user: user,\n    loginUser: userLogin,\n    logout: logout,\n    tweetDetail: tweetDetail,\n    SettweetDetail: SettweetDetail\n  };\n  const fourmintues = 1000 * 60 * 4;\n  useEffect(() => {\n    // console.log(authToken.refresh)\n    let interval = setInterval(() => {\n      console.log(\"hii\");\n\n      if (authToken) {\n        updateToken();\n      }\n    }, 200000);\n    return () => clearInterval(interval);\n  }, [authToken, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"ZlG9IEiv34Cvn+UMb4+rgRWeVUI=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","useNavigate","jwt_decode","ApiContext","AuthContext","AuthContextProvider","children","authToken","SetauthTokens","localStorage","getItem","JSON","parse","user","Setuser","access","loading","Setloading","tweetDetail","SettweetDetail","userLogin","e","preventDefault","console","log","username","target","value","password","data","response","post","headers","status","data1","setItem","stringify","alert","logout","removeItem","updateToken","refresh","Detail_tweet","id","Response","get","String","contextData","loginUser","fourmintues","interval","setInterval","clearInterval"],"sources":["/home/akash/Dev/TwitterClone/client/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\"\n// import { Navigate } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport { ApiContext } from \"./ApiContent\";\nexport const AuthContext = createContext();\nexport const AuthContextProvider = ({ children }) => {\n  //  localStorage.getItem('authToken')?jwt_decode((JSON.parse(localStorage.getItem('authToken'))).access):null\n  let [authToken, SetauthTokens] = useState(localStorage.getItem('authToken') ? JSON.parse(localStorage.getItem('authToken')) : null)\n  // const navigate = useNavigate();\n  let [user, Setuser] = useState(localStorage.getItem('authToken') ? jwt_decode((JSON.parse(localStorage.getItem('authToken'))).access) : null)\n  let [loading, Setloading] = useState(true)\n  let [tweetDetail,SettweetDetail]=useState(null)\n  let userLogin = async (e) => {\n    e.preventDefault()\n\n    console.log(e)\n    let username = e.target.username.value\n    let password = e.target.password.value\n    let data = { username, password }\n    \n    // console.log(data);\n    console.log(\"form submmitted\")\n    const response = await axios\n      .post(`http://127.0.0.1:8000/token/`, data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      \n      \n      if (response.status === 200) {\n        let data1 = await response.data;\n      await SetauthTokens(data1)\n      await Setuser(jwt_decode(data1.access))\n      localStorage.setItem('authToken', JSON.stringify(data1))\n      // return <Navigate to='/' />\n    } else {\n      alert('Something went Wrong! :(')\n      // return <Navigate to='/signin' />\n    }\n    \n  }\n  let logout = () => {\n    SetauthTokens(null)\n    Setuser(null)\n    localStorage.removeItem('authToken')\n    // navigate(\"/\");\n  }\n  let updateToken = async () => {\n    console.log(\"Update Token\")\n    const response = await axios\n      .post(`http://127.0.0.1:8000/token/refresh/`, { 'refresh': authToken.refresh }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n    if (response.status === 200) {\n      let data1 = await response.data;\n      await SetauthTokens(data1)\n      await Setuser(jwt_decode(data1.access))\n      localStorage.setItem('authToken', JSON.stringify(data1))\n    } else {\n      logout()\n    }\n  }\n\n\n    const Detail_tweet=async (id)=>{\n        try{\n\n            const Response= await axios.get(`http://127.0.0.1:8000/detail/${id}/`,{\n                headers:{\n                    \"Content-Type\":\"application/json\",\n                    \"Authorization\":\"Bearer \"+String(authToken.access)\n                }\n            })\n            SettweetDetail(Response.data)\n        }catch(e){\n            console.log(e)\n        }\n    }\n  \n  let contextData = {\n    authToken: authToken,\n    user: user,\n    loginUser: userLogin,\n    logout: logout,\n    tweetDetail:tweetDetail,\n    SettweetDetail:SettweetDetail\n  }\n  const fourmintues = 1000 * 60 * 4\n\n  useEffect(() => {\n    // console.log(authToken.refresh)\n    let interval = setInterval(() => {\n      console.log(\"hii\")\n      if (authToken) {\n        updateToken()\n      }\n    }, 200000)\n    return () => clearInterval(interval)\n\n  }, [authToken, loading])\n  return (\n    <AuthContext.Provider\n      value={contextData}\n    >\n    {children}\n    </AuthContext.Provider>\n  );\n\n\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}