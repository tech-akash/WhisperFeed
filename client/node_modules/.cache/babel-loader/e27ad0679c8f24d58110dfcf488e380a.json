{"ast":null,"code":"var _jsxFileName = \"/home/akash/Dev/TwitterClone/client/src/Pages/TagsTweet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Form, Container, Col, Row, Button } from 'react-bootstrap';\nimport { useParams } from \"react-router-dom\";\nimport { AuthContext } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TagsTweetView() {\n  _s();\n\n  let [data1, setData1] = useState(null);\n  const {\n    nameoftag\n  } = useParams();\n  const {\n    user,\n    authToken,\n    logout,\n    SettweetDetail\n  } = useContext(AuthContext); // console.log(`http://127.0.0.1:8000/hashtag/${nameoftag}/`)\n\n  async function getdata() {\n    try {\n      let response = await axios.get(`http://127.0.0.1:8000/hashtag/${nameoftag}/`, {\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\": \"Bearer \" + String(authToken.access)\n        }\n      });\n      console.log(\"Get nameoftag Called!\");\n      console.log(response.data['data']);\n      setData1(response.data['data']);\n\n      if (data1) {\n        console.log(data1);\n      }\n    } catch (e) {\n      if (e.response.status == 401) {\n        logout();\n      }\n\n      console.log(e.response.status);\n      alert(e.message);\n    }\n  }\n\n  useEffect(() => {\n    getdata();\n  }, []);\n\n  if (data1) {\n    console.log(data1);\n  }\n\n  return data1.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data1.map(items => console.log(items))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 24\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 77\n  }, this);\n}\n\n_s(TagsTweetView, \"gPa4hI4FJlPZtn3pqhNZhOa/aFM=\", false, function () {\n  return [useParams];\n});\n\n_c = TagsTweetView;\nexport default TagsTweetView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagsTweetView\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","axios","Form","Container","Col","Row","Button","useParams","AuthContext","TagsTweetView","data1","setData1","nameoftag","user","authToken","logout","SettweetDetail","getdata","response","get","headers","String","access","console","log","data","e","status","alert","message","length","map","items"],"sources":["/home/akash/Dev/TwitterClone/client/src/Pages/TagsTweet.js"],"sourcesContent":["import React,{useState,useEffect,createContext,useContext} from \"react\"\nimport axios from \"axios\";\nimport { Form, Container,Col,Row,Button } from 'react-bootstrap'\nimport { useParams } from \"react-router-dom\";\nimport { AuthContext } from '../contexts/AuthContext';\nfunction TagsTweetView(){\n    let [data1,setData1]=useState(null)\n    const { nameoftag } = useParams()\n    const { user, authToken, logout,SettweetDetail } = useContext(AuthContext)\n    // console.log(`http://127.0.0.1:8000/hashtag/${nameoftag}/`)\n    async function getdata() {\n        try {\n    \n          let response = await axios.get(`http://127.0.0.1:8000/hashtag/${nameoftag}/`, {\n            headers: {\n              'Content-Type': 'application/json',\n              \"Authorization\": \"Bearer \" + String(authToken.access)\n            }\n          })\n          console.log(\"Get nameoftag Called!\")\n          console.log(response.data['data'])\n         setData1(response.data['data'])\n          if(data1){\n            console.log(data1)\n          }\n\n        } catch (e) {\n          if(e.response.status==401){\n            logout()\n          }\n          console.log(e.response.status)\n            alert(e.message)\n        }\n    }\n    useEffect(()=>{\n        getdata()\n    },[])\n    if(data1){\n        console.log(data1)\n    }\n    return (\n        data1.length>0?<div >{data1.map(items => console.log(items))}</div>:<div>loading</div>\n    )\n\n}\nexport default TagsTweetView"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,aAAjC,EAA+CC,UAA/C,QAAgE,OAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAAyBC,GAAzB,EAA6BC,GAA7B,EAAiCC,MAAjC,QAA+C,iBAA/C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AACA,SAASC,aAAT,GAAwB;EAAA;;EACpB,IAAI,CAACC,KAAD,EAAOC,QAAP,IAAiBd,QAAQ,CAAC,IAAD,CAA7B;EACA,MAAM;IAAEe;EAAF,IAAgBL,SAAS,EAA/B;EACA,MAAM;IAAEM,IAAF;IAAQC,SAAR;IAAmBC,MAAnB;IAA0BC;EAA1B,IAA6ChB,UAAU,CAACQ,WAAD,CAA7D,CAHoB,CAIpB;;EACA,eAAeS,OAAf,GAAyB;IACrB,IAAI;MAEF,IAAIC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,iCAAgCP,SAAU,GAArD,EAAyD;QAC5EQ,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,iBAAiB,YAAYC,MAAM,CAACP,SAAS,CAACQ,MAAX;QAF5B;MADmE,CAAzD,CAArB;MAMAC,OAAO,CAACC,GAAR,CAAY,uBAAZ;MACAD,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,IAAT,CAAc,MAAd,CAAZ;MACDd,QAAQ,CAACO,QAAQ,CAACO,IAAT,CAAc,MAAd,CAAD,CAAR;;MACC,IAAGf,KAAH,EAAS;QACPa,OAAO,CAACC,GAAR,CAAYd,KAAZ;MACD;IAEF,CAfD,CAeE,OAAOgB,CAAP,EAAU;MACV,IAAGA,CAAC,CAACR,QAAF,CAAWS,MAAX,IAAmB,GAAtB,EAA0B;QACxBZ,MAAM;MACP;;MACDQ,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACR,QAAF,CAAWS,MAAvB;MACEC,KAAK,CAACF,CAAC,CAACG,OAAH,CAAL;IACH;EACJ;;EACD/B,SAAS,CAAC,MAAI;IACVmB,OAAO;EACV,CAFQ,EAEP,EAFO,CAAT;;EAGA,IAAGP,KAAH,EAAS;IACLa,OAAO,CAACC,GAAR,CAAYd,KAAZ;EACH;;EACD,OACIA,KAAK,CAACoB,MAAN,GAAa,CAAb,gBAAe;IAAA,UAAOpB,KAAK,CAACqB,GAAN,CAAUC,KAAK,IAAIT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CAAnB;EAAP;IAAA;IAAA;IAAA;EAAA,QAAf,gBAAoE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADxE;AAIH;;GAvCQvB,a;UAEiBF,S;;;KAFjBE,a;AAwCT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}