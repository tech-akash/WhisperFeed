{"ast":null,"code":"import * as React from 'react';\nimport { Options, tokenize } from 'linkifyjs';\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n/**\n * Given a string, converts to an array of valid React components\n * (which may include strings)\n * @param {string} str\n * @param {any} opts\n * @returns {React.ReactNodeArray}\n */\n\n\nfunction stringToElements(str, opts) {\n  var tokens = tokenize(str);\n  var elements = [];\n  var linkId = 0;\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (token.t === 'nl' && opts.nl2br) {\n      elements.push(React.createElement('br', {\n        key: \"linkified-\".concat(++linkId)\n      }));\n      continue;\n    } else if (!token.isLink || !opts.check(token)) {\n      // Regular text\n      elements.push(token.toString());\n      continue;\n    }\n\n    var _opts$resolve = opts.resolve(token),\n        formatted = _opts$resolve.formatted,\n        formattedHref = _opts$resolve.formattedHref,\n        tagName = _opts$resolve.tagName,\n        className = _opts$resolve.className,\n        target = _opts$resolve.target,\n        rel = _opts$resolve.rel,\n        attributes = _opts$resolve.attributes;\n\n    var props = {\n      key: \"linkified-\".concat(++linkId),\n      href: formattedHref\n    };\n\n    if (className) {\n      props.className = className;\n    }\n\n    if (target) {\n      props.target = target;\n    }\n\n    if (rel) {\n      props.rel = rel;\n    } // Build up additional attributes\n    // Support for events via attributes hash\n\n\n    if (attributes) {\n      for (var attr in attributes) {\n        props[attr] = attributes[attr];\n      }\n    }\n\n    elements.push(React.createElement(tagName, props, formatted));\n  }\n\n  return elements;\n} // Recursively linkify the contents of the given React Element instance\n\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {React.ReactElement<P, T>} element\n * @param {Object} opts\n * @param {number} elementId\n * @returns {React.ReactElement<P, T>}\n */\n\n\nfunction linkifyReactElement(element, opts) {\n  var elementId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (React.Children.count(element.props.children) === 0) {\n    // No need to clone if the element had no children\n    return element;\n  }\n\n  var children = [];\n  React.Children.forEach(element.props.children, function (child) {\n    if (typeof child === 'string') {\n      // ensure that we always generate unique element IDs for keys\n      elementId = elementId + 1;\n      children.push.apply(children, _toConsumableArray(stringToElements(child, opts)));\n    } else if (React.isValidElement(child)) {\n      if (typeof child.type === 'string' && opts.ignoreTags.indexOf(child.type.toUpperCase()) >= 0) {\n        // Don't linkify this element\n        children.push(child);\n      } else {\n        children.push(linkifyReactElement(child, opts, ++elementId));\n      }\n    } else {\n      // Unknown element type, just push\n      children.push(child);\n    }\n  }); // Set a default unique key, copy over remaining props\n\n  var newProps = {\n    key: \"linkified-element-\".concat(elementId)\n  };\n\n  for (var prop in element.props) {\n    newProps[prop] = element.props[prop];\n  }\n\n  return React.cloneElement(element, newProps, children);\n}\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {P & { tagName?: T, options?: any, children?: React.ReactNode}} props\n * @returns {React.ReactElement<P, T>}\n */\n\n\nvar Linkify = function Linkify(props) {\n  // Copy over all non-linkify-specific props\n  var newProps = {\n    key: 'linkified-element-wrapper'\n  };\n\n  for (var prop in props) {\n    if (prop !== 'options' && prop !== 'tagName' && prop !== 'children') {\n      newProps[prop] = props[prop];\n    }\n  }\n\n  var opts = new Options(props.options);\n  var tagName = props.tagName || React.Fragment || 'span';\n  var children = props.children;\n  var element = React.createElement(tagName, newProps, children);\n  return linkifyReactElement(element, opts, 0);\n};\n\nexport { Linkify as default };","map":{"version":3,"names":["React","Options","tokenize","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","len","length","i","arr2","TypeError","stringToElements","str","opts","tokens","elements","linkId","token","t","nl2br","push","createElement","key","concat","isLink","check","_opts$resolve","resolve","formatted","formattedHref","tagName","className","target","rel","attributes","props","href","attr","linkifyReactElement","element","elementId","arguments","undefined","Children","count","children","forEach","child","apply","isValidElement","type","ignoreTags","indexOf","toUpperCase","newProps","prop","cloneElement","Linkify","options","Fragment","default"],"sources":["/home/akash/Dev/TwitterClone/client/node_modules/linkify-react/dist/linkify-react.module.js"],"sourcesContent":["import * as React from 'react';\nimport { Options, tokenize } from 'linkifyjs';\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n/**\n * Given a string, converts to an array of valid React components\n * (which may include strings)\n * @param {string} str\n * @param {any} opts\n * @returns {React.ReactNodeArray}\n */\n\nfunction stringToElements(str, opts) {\n  var tokens = tokenize(str);\n  var elements = [];\n  var linkId = 0;\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (token.t === 'nl' && opts.nl2br) {\n      elements.push(React.createElement('br', {\n        key: \"linkified-\".concat(++linkId)\n      }));\n      continue;\n    } else if (!token.isLink || !opts.check(token)) {\n      // Regular text\n      elements.push(token.toString());\n      continue;\n    }\n\n    var _opts$resolve = opts.resolve(token),\n        formatted = _opts$resolve.formatted,\n        formattedHref = _opts$resolve.formattedHref,\n        tagName = _opts$resolve.tagName,\n        className = _opts$resolve.className,\n        target = _opts$resolve.target,\n        rel = _opts$resolve.rel,\n        attributes = _opts$resolve.attributes;\n\n    var props = {\n      key: \"linkified-\".concat(++linkId),\n      href: formattedHref\n    };\n\n    if (className) {\n      props.className = className;\n    }\n\n    if (target) {\n      props.target = target;\n    }\n\n    if (rel) {\n      props.rel = rel;\n    } // Build up additional attributes\n    // Support for events via attributes hash\n\n\n    if (attributes) {\n      for (var attr in attributes) {\n        props[attr] = attributes[attr];\n      }\n    }\n\n    elements.push(React.createElement(tagName, props, formatted));\n  }\n\n  return elements;\n} // Recursively linkify the contents of the given React Element instance\n\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {React.ReactElement<P, T>} element\n * @param {Object} opts\n * @param {number} elementId\n * @returns {React.ReactElement<P, T>}\n */\n\n\nfunction linkifyReactElement(element, opts) {\n  var elementId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (React.Children.count(element.props.children) === 0) {\n    // No need to clone if the element had no children\n    return element;\n  }\n\n  var children = [];\n  React.Children.forEach(element.props.children, function (child) {\n    if (typeof child === 'string') {\n      // ensure that we always generate unique element IDs for keys\n      elementId = elementId + 1;\n      children.push.apply(children, _toConsumableArray(stringToElements(child, opts)));\n    } else if (React.isValidElement(child)) {\n      if (typeof child.type === 'string' && opts.ignoreTags.indexOf(child.type.toUpperCase()) >= 0) {\n        // Don't linkify this element\n        children.push(child);\n      } else {\n        children.push(linkifyReactElement(child, opts, ++elementId));\n      }\n    } else {\n      // Unknown element type, just push\n      children.push(child);\n    }\n  }); // Set a default unique key, copy over remaining props\n\n  var newProps = {\n    key: \"linkified-element-\".concat(elementId)\n  };\n\n  for (var prop in element.props) {\n    newProps[prop] = element.props[prop];\n  }\n\n  return React.cloneElement(element, newProps, children);\n}\n/**\n * @template P\n * @template {string | React.JSXElementConstructor<P>} T\n * @param {P & { tagName?: T, options?: any, children?: React.ReactNode}} props\n * @returns {React.ReactElement<P, T>}\n */\n\n\nvar Linkify = function Linkify(props) {\n  // Copy over all non-linkify-specific props\n  var newProps = {\n    key: 'linkified-element-wrapper'\n  };\n\n  for (var prop in props) {\n    if (prop !== 'options' && prop !== 'tagName' && prop !== 'children') {\n      newProps[prop] = props[prop];\n    }\n  }\n\n  var opts = new Options(props.options);\n  var tagName = props.tagName || React.Fragment || 'span';\n  var children = props.children;\n  var element = React.createElement(tagName, newProps, children);\n  return linkifyReactElement(element, opts, 0);\n};\n\nexport { Linkify as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}