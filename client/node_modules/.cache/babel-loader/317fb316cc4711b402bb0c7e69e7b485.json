{"ast":null,"code":"var _jsxFileName = \"/home/akash/Dev/TwitterClone/client/src/components/ThreadComments.js\";\nimport React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThreadComments(props) {\n  console.log(props.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.value && props.value.map(_ref => {\n      let {\n        content,\n        id,\n        likes,\n        username,\n        children,\n        parent\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"grey\"\n            },\n            children: [\"Replying to \", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${parent['username']}`,\n              children: parent['username']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), props.content && /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: props.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          \"aria-label\": \"Basic example\",\n          className: \"btn-grp\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn tweetbtn like\",\n            onClick: () => handleLike(props.id),\n            children: [props.likes, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"bi bi-heart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 110\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn tweetbtn retweet\",\n            onClick: () => handleretweet(props.id),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"bi bi-arrow-repeat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 102\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn tweetbtn reply\",\n            onClick: () => {\n              handlereply(props.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"bi bi-reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 102\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn tweetbtn share\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"bi bi-share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n\n_c = ThreadComments;\nexport default ThreadComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThreadComments\");","map":{"version":3,"names":["React","Card","ThreadComments","props","console","log","value","map","content","id","likes","username","children","parent","color","handleLike","handleretweet","handlereply"],"sources":["/home/akash/Dev/TwitterClone/client/src/components/ThreadComments.js"],"sourcesContent":["import React from \"react\"\nimport { Card } from \"react-bootstrap\"\n\nfunction ThreadComments(props){\n    console.log(props.value)\n    return <div>\n        {props.value && props.value.map(({ content, id, likes,username,children,parent }) => (\n            \n            <Card>\n            <Card.Body>\n\n            <Card.Title>{username}</Card.Title>\n            <span style={{ color: \"grey\" }}>Replying to <Link to={`/profile/${parent['username']}`}>{parent['username']}</Link></span>\n            {props.content && <Card.Text>\n                        {props.content}\n                    </Card.Text>}\n            </Card.Body>\n            <ButtonGroup aria-label=\"Basic example\" className='btn-grp' >\n                    <Button className='btn tweetbtn like' onClick={() => handleLike(props.id)}>{props.likes} <i class=\"bi bi-heart\"></i></Button>\n                    <Button className='btn tweetbtn retweet' onClick={() => handleretweet(props.id)}><i class=\"bi bi-arrow-repeat\"></i></Button>\n                    <Button className='btn tweetbtn reply' onClick={() => { handlereply(props.id) }}><i class=\"bi bi-reply\"></i></Button>\n                    <Button className='btn tweetbtn share' ><i class=\"bi bi-share\"></i></Button>\n            </ButtonGroup>\n            </Card>\n        ))}\n    </div>\n}\n\nexport default ThreadComments\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;EAC1BC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;EACA,oBAAO;IAAA,UACFH,KAAK,CAACG,KAAN,IAAeH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB;MAAA,IAAC;QAAEC,OAAF;QAAWC,EAAX;QAAeC,KAAf;QAAqBC,QAArB;QAA8BC,QAA9B;QAAuCC;MAAvC,CAAD;MAAA,oBAE5B,QAAC,IAAD;QAAA,wBACA,QAAC,IAAD,CAAM,IAAN;UAAA,wBAEA,QAAC,IAAD,CAAM,KAAN;YAAA,UAAaF;UAAb;YAAA;YAAA;YAAA;UAAA,QAFA,eAGA;YAAM,KAAK,EAAE;cAAEG,KAAK,EAAE;YAAT,CAAb;YAAA,wCAA4C,QAAC,IAAD;cAAM,EAAE,EAAG,YAAWD,MAAM,CAAC,UAAD,CAAa,EAAzC;cAAA,UAA6CA,MAAM,CAAC,UAAD;YAAnD;cAAA;cAAA;cAAA;YAAA,QAA5C;UAAA;YAAA;YAAA;YAAA;UAAA,QAHA,EAICV,KAAK,CAACK,OAAN,iBAAiB,QAAC,IAAD,CAAM,IAAN;YAAA,UACLL,KAAK,CAACK;UADD;YAAA;YAAA;YAAA;UAAA,QAJlB;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eASA,QAAC,WAAD;UAAa,cAAW,eAAxB;UAAwC,SAAS,EAAC,SAAlD;UAAA,wBACQ,QAAC,MAAD;YAAQ,SAAS,EAAC,mBAAlB;YAAsC,OAAO,EAAE,MAAMO,UAAU,CAACZ,KAAK,CAACM,EAAP,CAA/D;YAAA,WAA4EN,KAAK,CAACO,KAAlF,oBAAyF;cAAG,KAAK,EAAC;YAAT;cAAA;cAAA;cAAA;YAAA,QAAzF;UAAA;YAAA;YAAA;YAAA;UAAA,QADR,eAEQ,QAAC,MAAD;YAAQ,SAAS,EAAC,sBAAlB;YAAyC,OAAO,EAAE,MAAMM,aAAa,CAACb,KAAK,CAACM,EAAP,CAArE;YAAA,uBAAiF;cAAG,KAAK,EAAC;YAAT;cAAA;cAAA;cAAA;YAAA;UAAjF;YAAA;YAAA;YAAA;UAAA,QAFR,eAGQ,QAAC,MAAD;YAAQ,SAAS,EAAC,oBAAlB;YAAuC,OAAO,EAAE,MAAM;cAAEQ,WAAW,CAACd,KAAK,CAACM,EAAP,CAAX;YAAuB,CAA/E;YAAA,uBAAiF;cAAG,KAAK,EAAC;YAAT;cAAA;cAAA;cAAA;YAAA;UAAjF;YAAA;YAAA;YAAA;UAAA,QAHR,eAIQ,QAAC,MAAD;YAAQ,SAAS,EAAC,oBAAlB;YAAA,uBAAwC;cAAG,KAAK,EAAC;YAAT;cAAA;cAAA;cAAA;YAAA;UAAxC;YAAA;YAAA;YAAA;UAAA,QAJR;QAAA;UAAA;UAAA;UAAA;QAAA,QATA;MAAA;QAAA;QAAA;QAAA;MAAA,QAF4B;IAAA,CAAhB;EADb;IAAA;IAAA;IAAA;EAAA,QAAP;AAqBH;;KAvBQP,c;AAyBT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}