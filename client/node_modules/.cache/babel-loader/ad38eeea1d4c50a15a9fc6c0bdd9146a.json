{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar linkifyjs = require('linkifyjs');\n/**\n\tQuick Hashtag parser plugin for linkify\n*/\n\n\nvar hashtag = function hashtag(_ref) {\n  var scanner = _ref.scanner,\n      parser = _ref.parser,\n      utils = _ref.utils; // Various tokens that may compose a hashtag\n\n  var _scanner$tokens = scanner.tokens,\n      POUND = _scanner$tokens.POUND,\n      DOMAIN = _scanner$tokens.DOMAIN,\n      TLD = _scanner$tokens.TLD,\n      LOCALHOST = _scanner$tokens.LOCALHOST,\n      UNDERSCORE = _scanner$tokens.UNDERSCORE; // The start state\n\n  var START_STATE = parser.start; // Create a new token that class that the parser emits when it finds a hashtag\n\n  var Hashtag = utils.createTokenClass('hashtag', {\n    isLink: true\n  }); // Take or create a transition from start to the '#' sign (non-accepting)\n\n  var HASH_STATE = START_STATE.tt(POUND); // Take transition from '#' to any text token to yield valid hashtag state\n\n  var HASHTAG_STATE = HASH_STATE.tt(DOMAIN, Hashtag); // Now that we have the hashtag state, no need to create new states\n\n  HASH_STATE.tt(TLD, HASHTAG_STATE);\n  HASH_STATE.tt(LOCALHOST, HASHTAG_STATE); // Account for leading underscore (non-accepting unless followed by domain)\n\n  var HASH_UNDERSCORE_STATE = HASH_STATE.tt(UNDERSCORE);\n  HASH_UNDERSCORE_STATE.tt(UNDERSCORE, HASH_UNDERSCORE_STATE);\n  HASH_UNDERSCORE_STATE.tt(DOMAIN, HASHTAG_STATE);\n  HASH_UNDERSCORE_STATE.tt(TLD, HASHTAG_STATE);\n  HASH_UNDERSCORE_STATE.tt(LOCALHOST, HASHTAG_STATE); // Continue the transitions\n\n  HASHTAG_STATE.tt(UNDERSCORE, HASHTAG_STATE);\n  HASHTAG_STATE.tt(DOMAIN, HASHTAG_STATE);\n  HASHTAG_STATE.tt(TLD, HASHTAG_STATE);\n  HASHTAG_STATE.tt(LOCALHOST, HASHTAG_STATE); // Trailing underscore is okay\n};\n\nlinkifyjs.registerPlugin('hashtag', hashtag);\nexports.hashtag = hashtag;","map":{"version":3,"names":["Object","defineProperty","exports","value","linkifyjs","require","hashtag","_ref","scanner","parser","utils","_scanner$tokens","tokens","POUND","DOMAIN","TLD","LOCALHOST","UNDERSCORE","START_STATE","start","Hashtag","createTokenClass","isLink","HASH_STATE","tt","HASHTAG_STATE","HASH_UNDERSCORE_STATE","registerPlugin"],"sources":["/home/akash/Dev/TwitterClone/client/node_modules/linkifyjs/lib/plugins/hashtag.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar linkifyjs = require('linkifyjs');\n\n/**\n\tQuick Hashtag parser plugin for linkify\n*/\nvar hashtag = function hashtag(_ref) {\n  var scanner = _ref.scanner,\n      parser = _ref.parser,\n      utils = _ref.utils;\n  // Various tokens that may compose a hashtag\n  var _scanner$tokens = scanner.tokens,\n      POUND = _scanner$tokens.POUND,\n      DOMAIN = _scanner$tokens.DOMAIN,\n      TLD = _scanner$tokens.TLD,\n      LOCALHOST = _scanner$tokens.LOCALHOST,\n      UNDERSCORE = _scanner$tokens.UNDERSCORE; // The start state\n\n  var START_STATE = parser.start; // Create a new token that class that the parser emits when it finds a hashtag\n\n  var Hashtag = utils.createTokenClass('hashtag', {\n    isLink: true\n  }); // Take or create a transition from start to the '#' sign (non-accepting)\n\n  var HASH_STATE = START_STATE.tt(POUND); // Take transition from '#' to any text token to yield valid hashtag state\n\n  var HASHTAG_STATE = HASH_STATE.tt(DOMAIN, Hashtag); // Now that we have the hashtag state, no need to create new states\n\n  HASH_STATE.tt(TLD, HASHTAG_STATE);\n  HASH_STATE.tt(LOCALHOST, HASHTAG_STATE); // Account for leading underscore (non-accepting unless followed by domain)\n\n  var HASH_UNDERSCORE_STATE = HASH_STATE.tt(UNDERSCORE);\n  HASH_UNDERSCORE_STATE.tt(UNDERSCORE, HASH_UNDERSCORE_STATE);\n  HASH_UNDERSCORE_STATE.tt(DOMAIN, HASHTAG_STATE);\n  HASH_UNDERSCORE_STATE.tt(TLD, HASHTAG_STATE);\n  HASH_UNDERSCORE_STATE.tt(LOCALHOST, HASHTAG_STATE); // Continue the transitions\n\n  HASHTAG_STATE.tt(UNDERSCORE, HASHTAG_STATE);\n  HASHTAG_STATE.tt(DOMAIN, HASHTAG_STATE);\n  HASHTAG_STATE.tt(TLD, HASHTAG_STATE);\n  HASHTAG_STATE.tt(LOCALHOST, HASHTAG_STATE); // Trailing underscore is okay\n};\nlinkifyjs.registerPlugin('hashtag', hashtag);\n\nexports.hashtag = hashtag;\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;AAEA;AACA;AACA;;;AACA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;EACnC,IAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;EAAA,IACIC,MAAM,GAAGF,IAAI,CAACE,MADlB;EAAA,IAEIC,KAAK,GAAGH,IAAI,CAACG,KAFjB,CADmC,CAInC;;EACA,IAAIC,eAAe,GAAGH,OAAO,CAACI,MAA9B;EAAA,IACIC,KAAK,GAAGF,eAAe,CAACE,KAD5B;EAAA,IAEIC,MAAM,GAAGH,eAAe,CAACG,MAF7B;EAAA,IAGIC,GAAG,GAAGJ,eAAe,CAACI,GAH1B;EAAA,IAIIC,SAAS,GAAGL,eAAe,CAACK,SAJhC;EAAA,IAKIC,UAAU,GAAGN,eAAe,CAACM,UALjC,CALmC,CAUU;;EAE7C,IAAIC,WAAW,GAAGT,MAAM,CAACU,KAAzB,CAZmC,CAYH;;EAEhC,IAAIC,OAAO,GAAGV,KAAK,CAACW,gBAAN,CAAuB,SAAvB,EAAkC;IAC9CC,MAAM,EAAE;EADsC,CAAlC,CAAd,CAdmC,CAgB/B;;EAEJ,IAAIC,UAAU,GAAGL,WAAW,CAACM,EAAZ,CAAeX,KAAf,CAAjB,CAlBmC,CAkBK;;EAExC,IAAIY,aAAa,GAAGF,UAAU,CAACC,EAAX,CAAcV,MAAd,EAAsBM,OAAtB,CAApB,CApBmC,CAoBiB;;EAEpDG,UAAU,CAACC,EAAX,CAAcT,GAAd,EAAmBU,aAAnB;EACAF,UAAU,CAACC,EAAX,CAAcR,SAAd,EAAyBS,aAAzB,EAvBmC,CAuBM;;EAEzC,IAAIC,qBAAqB,GAAGH,UAAU,CAACC,EAAX,CAAcP,UAAd,CAA5B;EACAS,qBAAqB,CAACF,EAAtB,CAAyBP,UAAzB,EAAqCS,qBAArC;EACAA,qBAAqB,CAACF,EAAtB,CAAyBV,MAAzB,EAAiCW,aAAjC;EACAC,qBAAqB,CAACF,EAAtB,CAAyBT,GAAzB,EAA8BU,aAA9B;EACAC,qBAAqB,CAACF,EAAtB,CAAyBR,SAAzB,EAAoCS,aAApC,EA7BmC,CA6BiB;;EAEpDA,aAAa,CAACD,EAAd,CAAiBP,UAAjB,EAA6BQ,aAA7B;EACAA,aAAa,CAACD,EAAd,CAAiBV,MAAjB,EAAyBW,aAAzB;EACAA,aAAa,CAACD,EAAd,CAAiBT,GAAjB,EAAsBU,aAAtB;EACAA,aAAa,CAACD,EAAd,CAAiBR,SAAjB,EAA4BS,aAA5B,EAlCmC,CAkCS;AAC7C,CAnCD;;AAoCArB,SAAS,CAACuB,cAAV,CAAyB,SAAzB,EAAoCrB,OAApC;AAEAJ,OAAO,CAACI,OAAR,GAAkBA,OAAlB"},"metadata":{},"sourceType":"script"}